<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>System-Design on The Mize Collection</title>
    <link>https://mizerc.github.io/tags/system-design/</link>
    <description>Recent content in System-Design on The Mize Collection</description>
    <generator>Hugo -- 0.147.4</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mizerc.github.io/tags/system-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System Design</title>
      <link>https://mizerc.github.io/posts/eng-system-design/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mizerc.github.io/posts/eng-system-design/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The goal of system design is to architect scalable, reliable, maintainable, and performant software systems that meet both functional and non-functional requirements.
It focuses on how components (databases, APIs, caches, queues) interact, scale under load, recover from failure, and handle growth.
System design balances trade-offs (like CAP theorem, latency vs. throughput, consistency vs. availability) to ensure the system performs well under real-world constraints.
The art of turning product specs into robust architecture that can scale, survive, and evolve.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
