<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Language on The Mize Collection</title><link>https://mizerc.github.io/tags/language/</link><description>Recent content in Language on The Mize Collection</description><generator>Hugo -- 0.148.1</generator><language>en-us</language><lastBuildDate>Tue, 01 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://mizerc.github.io/tags/language/index.xml" rel="self" type="application/rss+xml"/><item><title>Next.js</title><link>https://mizerc.github.io/posts/technology/nextjs/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://mizerc.github.io/posts/technology/nextjs/</guid><description>&lt;h1 id="routing">Routing&lt;/h1>
&lt;h2 id="app-router">App Router&lt;/h2>
&lt;p>In Next.js 13+, app route (/app) is part of the App Router, which uses the new file-based routing system with React Server Components.
It supports layouts, templates, nested routing, loading/error states, and server/client components separation.
This approach is more flexible and modern, designed for large-scale and dynamic apps.&lt;/p>
&lt;p>The App Router is a file-system based router that uses React&amp;rsquo;s latest features such as Server Components, Suspense, and Server Functions.&lt;/p></description></item><item><title>C Language</title><link>https://mizerc.github.io/posts/technology/language-c/</link><pubDate>Sun, 11 May 2025 00:00:00 +0000</pubDate><guid>https://mizerc.github.io/posts/technology/language-c/</guid><description>&lt;p>Random notes about the C language.&lt;/p>
&lt;h1 id="entry-point">Entry Point&lt;/h1>
&lt;p>The &lt;code>main&lt;/code> function is the entry point of the program. It is the first function that is called when the program starts.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="compilation-and-linking">Compilation and Linking&lt;/h1>
&lt;p>The C compiler (cc) compiles each source code into object files.&lt;/p>
&lt;pre tabindex="0">&lt;code>cc -c file1.c file2.c
&lt;/code>&lt;/pre>&lt;p>The &lt;code>-c&lt;/code> option tells the compiler to compile only and not to link.&lt;/p>
&lt;p>The object files are then linked together to form an executable.&lt;/p></description></item></channel></rss>